@model Team2Project.ViewModel.SelectProgrammeVM

@{
    ViewBag.Title = "Select Programme";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Select Programme</h2>

<div class="form-horizontal">
    <div class="form-group">
        <hr />
        @Html.LabelFor(model => model.Programmes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Programmes, htmlAttributes: new { @class = "form-control w3-btn w3-white w3-border w3-border-red w3-round-large w3-padding-small" })
            @Html.ValidationMessageFor(model => model.Programmes, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="Notice" ></div>
    <p id="list"></p>
    <div id="Timeform"></div>
    <table class="table" id="TimeTable"></table>

</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>

<script>

    //select Programme
    $("#Programmes").change(function () {
        var selectedProgrammes = $("#Programmes").val().toString();
        printCourse(selectedProgrammes);
    })
    const printCourse = (Programmes) => {
        debugger;
        $.ajax({
            type: "Post",
            url: "/Admin/SelectProgramme",
            data: {
                selectedProgramme: Programmes
            },
            success: function (response) {
                $("#list").html("");
                $("#TimeTable").html("");
                $("#Timeform").html("");
                htmlHeader = `<p ><button id="Create" onclick="Crud('CreateCourse')">Create Course</button> <button id="Edit" onclick="Crud('EditCourse')">Edit Course</button> <button id="Delete" onclick="Crud('DeleteCourse')">Delete Course</button> <span id="CRUD"></span> </p> <div class="form-horizontal" id="Courseform" style = "margin-bottom:20px"></div>`;
                $("#list").append(htmlHeader);
                if (response.data) {
                    Object.keys(response.AllCourseName).forEach(function (num) {
                        htmlCourselist = `<button style="margin-right:20px" onclick="SelectCourse('${response.AllCourseName[num].CoursesID}')">${response.AllCourseName[num].CourseName}</button>`
                        $("#list").append(htmlCourselist);

                    });
                }
            }

        })
    }
    printCourse($("#Programmes").val().toString());






    //select Courses
    function SelectCourse(Course) {
        debugger
        var selectedProgrammes = $("#Programmes").val().toString();
        var Crud = localStorage.getItem('CRUD');
        if (Crud == "EditCourse") {
            localStorage.removeItem('CRUD');
            location.href = `/Admin/EditCourse/${Course}`
        }
        else if (Crud == "DeleteCourse") {
            localStorage.removeItem('CRUD');
            location.href = `/Admin/DeleteCourse/${Course}`
        }
        else {
            localStorage.removeItem('Course');
            $("#Timeform").html("");
            $("#TimeTable").html("");
            localStorage.setItem('Course', Course);
            PrintCourseTime(selectedProgrammes, Course);
        }

    }
    const PrintCourseTime = (selectedProgrammes, CourseId) => {
        debugger;
        htmlcreateBtn = `<button id="Time" onclick="Crud('CreateTime')">Create Time</button>`;
        $("#Timeform").append(htmlcreateBtn);
        $.ajax({
            type: "Post",
            url: "/Admin/CourseIndex",
            data: {
                CourseId: CourseId,
                selectedProgramme: selectedProgrammes
            },
            success: function (response) {
                if (response.time == false) {
                    $("#Timeform").append(`<p>${response.Error}</p>`);
                }
                else {
                    htmlHeader = `<tr> <th>Course Name</th>   <th>Start Time</th>   <th>End Time</th>   <th></th> </tr>`;
                    $("#TimeTable").append(htmlHeader);
                    Object.keys(response.getTimetable).forEach(function (num) {
                        htmlCourselist = `<tr> <td>${response.getTimetable[num].CourseName}</td>   <td>${response.getTimetable[num].StartTime.toString()}</td>   <td>${response.getTimetable[num].EndTime}</td>   <td> <button id="Option" value=${response.getTimetable[num].CourseTimetableId} onclick="Option('Edit')">Edit</button>  <button id="Option" value=${response.getTimetable[num].CourseTimetableId} onclick="Option('Details')">Details</button>  <button id="Option" value=${response.getTimetable[num].CourseTimetableId} onclick="Option('Delete')">Delete</button> </td> </tr>`;
                        debugger;
                        $("#TimeTable").append(htmlCourselist);

                    });

                }
            }
        })
    }
    //select Course time option
    function Option(option) {
        var TimeId = $("#Option").val();
        if (option == "Edit") {
            location.href = `/Admin/EditCourseTime/${TimeId}`
        }
        else if (option == "Details") {
            location.href = `/Admin/CourseTimeDetail/${TimeId}`
        }
        else if (option == "Delete") {
            location.href = `/Admin/DeleteCourseTime/${TimeId}`
        }
    }

    //create form
    const Crud = (option) => {
        debugger
        if (option == "CreateTime") {
            $("#Timeform").html('');
            $("#Edit").css({ "background-color": "" });
            $("#Create").css({ "background-color": "" });
            $("#Delete").css({ "background-color": "" });
            htmlCreateTime = `<p><label>Course Start Time</label> <input id="Start" class = "form-control w3-btn w3-white w3-border w3-border-red w3-round-large w3-padding-small", type = "datetime-local", required = "required" /></p><p><label style>Course End Time </label> <input id="End" class = "form-control w3-btn w3-white w3-border w3-border-red w3-round-large w3-padding-small", type = "datetime-local", required = "required" /></p><input onclick="Submit('Time')" id="SubmitCourseTime" type="button" value="Submit" Style="margin-left : 10px" />`
            $("#Timeform").append(htmlCreateTime);
            $("#Time").css({ "background-color": "aqua" });
            $("#Courseform").html('');
        }
        else if (option == "CreateCourse") {
            $("#Notice").html("");
            $("#Edit").css({ "background-color": "" });
            $("#Delete").css({ "background-color": "" });
            $("#Time").css({ "background-color": "" });
            $("#Courseform").html('');
            htmlCreateCourse = `<label>Course Name</label> <input id="CourseName" type="text" class = "form-control w3-btn w3-white w3-border w3-border-red w3-round-large w3-padding-small", required = "required"/><input onclick="Submit('Course')" type="button" value="Submit" Style="margin-left : 10px" />`
            $("#Courseform").append(htmlCreateCourse);
            $("#CRUD").html('');
            $("#CRUD").append(`<button onclick="Crud('Cancel')">Cancel</button>`);
            $("#Timeform").html("");
            $("#TimeTable").html("");
            $("#Create").css({ "background-color": "aqua" });
            localStorage.removeItem('CRUD');
            localStorage.removeItem('Course');

        }
        else if (option == "EditCourse") {
            $("#Notice").html("");
            localStorage.removeItem('CRUD');
            htmlNotice = `<p> Please select one course to edit </p>`;
            $("#CRUD").html('');
            $("#CRUD").append(`<button onclick="Crud('Cancel')">Cancel</button>`);
            $("#Notice").append(htmlNotice);
            $("#Courseform").html('');
            $("#Delete").css({ "background-color": "" });
            $("#Create").css({ "background-color": "" });
            $("#Time").css({ "background-color": "" });
            $("#Edit").css({ "background-color": "aqua" });
            localStorage.setItem('CRUD', option);
        }
        else if (option == "DeleteCourse") {
            localStorage.removeItem('CRUD');
            $("#Notice").html("");
            htmlNotice = `<p> Please select one course to delete </p>`;
            $("#Notice").append(htmlNotice);
            $("#CRUD").html('');
            $("#CRUD").append(`<button onclick="Crud('Cancel')">Cancel</button>`);
            $("#Courseform").html('');
            $("#Edit").css({ "background-color": "" });
            $("#Create").css({ "background-color": "" });
            $("#Time").css({ "background-color": "" });
            $("#Delete").css({ "background-color": "aqua" });
            localStorage.setItem('CRUD', option);

        }
        else if (option == "Cancel") {
            localStorage.removeItem('CRUD');
            $("#Notice").html('');
            $("#CRUD").html('');
            $("#Delete").css({ "background-color": "" });
            $("#Edit").css({ "background-color": "" });
            $("#Create").css({ "background-color": "" });
            $("#Time").css({ "background-color": "" });
            $("#Courseform").html('');
        }

    }

    function Submit(option) {
        debugger
        //const CreateCourseOrTime = (Programmes, option) => {
        var Course = localStorage.getItem('Course');
        var StartTime = $("#Start").val();
        var EndTime = $("#End").val();
        var getCourseName = $("#CourseName").val();
        var selectedProgrammes = $("#Programmes").val().toString();
        $.ajax({
            type: "Post",
            url: "/Admin/CreateCourse",
            data: {
                selectedProgramme: selectedProgrammes,
                CreateOption: option,
                SelectedCourseId: Course,
                CourseName: getCourseName,
                StartTime: StartTime,
                EndTime: EndTime
            },
            success: function (response) {
                debugger;
                if (option == "Course") {
                    if (response.SaveCourse) {
                        printCourse(selectedProgrammes);
                    }
                    else {
                        $("#Timeform").append(`<p>${response.Error}</p>`);
                    }
                }
                else if (option == "Time") {
                    if (response.Savetime) {
                        PrintCourseTime(selectedProgrammes, Course);
                        $("#Timeform").html("");
                        $("#TimeTable").html("");
                        localStorage.removeItem('Course');
                    }
                    else {
                        $("#Timeform").append(`<p>${response.Error}</p>`);
                    }
                }
            }

        })
        //}

    }

</script>